{
    "Quels magasins se trouvent dans la région 'Ile-de-France' ?": "SELECT * FROM magasins WHERE region = 'Ile-de-France';",
    "Quels sont les clients ayant le plus de points de fidélité ?": "SELECT nom_client, prenom, points_fidelite FROM clients ORDER BY points_fidelite DESC LIMIT 5;",
    "Quels produits sont en rupture de stock dans le magasin 'Magasin A' ?": "SELECT p.nom_produit FROM produits p JOIN stocks s ON p.id_produit = s.id_produit JOIN magasins m ON s.id_magasin = m.id_magasin WHERE m.nom_magasin = 'Magasin A' AND s.quantite_stock = 0;",
    "Quel est le total des ventes pour le client 'Jean Dupont' ?": "SELECT SUM(v.montant_total) AS total_ventes FROM ventes v JOIN clients c ON v.id_client = c.id_client WHERE c.nom_client = 'Jean' AND c.prenom = 'Dupont';",
    "Combien de retours ont été effectués pour le produit 'Chaussures Nike' ?": "SELECT COUNT(*) AS nombre_retours FROM retours r JOIN produits p ON r.id_produit = p.id_produit WHERE p.nom_produit = 'Chaussures Nike';",
    "Quels sont les produits les plus vendus ?": "SELECT p.nom_produit, SUM(l.quantite) AS total_vendu FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit GROUP BY p.nom_produit ORDER BY total_vendu DESC LIMIT 5;",
    "Quels employés ont réalisé le plus de ventes ?": "SELECT e.nom_employe, COUNT(v.id_vente) AS nombre_ventes FROM ventes v JOIN employes e ON v.id_employe = e.id_employe GROUP BY e.nom_employe ORDER BY nombre_ventes DESC;",
    "Quel est le montant total des ventes pour le mois de janvier 2024 ?": "SELECT SUM(montant_total) AS total_ventes FROM ventes WHERE MONTH(date_vente) = 1 AND YEAR(date_vente) = 2024;",
    "Quels magasins ont ouvert après le 1er janvier 2023 ?": "SELECT nom_magasin, date_ouverture FROM magasins WHERE date_ouverture > '2023-01-01';",
    "Quels produits sont disponibles dans plusieurs magasins ?": "SELECT p.nom_produit, COUNT(s.id_magasin) AS nombre_de_magasins FROM produits p JOIN stocks s ON p.id_produit = s.id_produit GROUP BY p.nom_produit HAVING nombre_de_magasins > 1;",
    "Quel produit a généré le plus de retours ?": "SELECT p.nom_produit, COUNT(r.id_retour) AS nombre_retours FROM retours r JOIN produits p ON r.id_produit = p.id_produit GROUP BY p.nom_produit ORDER BY nombre_retours DESC LIMIT 1;",
    "Quelles ventes ont eu lieu pendant un certain créneau horaire ?": "SELECT * FROM ventes WHERE date_vente BETWEEN '2024-02-12 14:00:00' AND '2024-02-12 16:00:00';",
    "Quel est le revenu total généré par le magasin 'Magasin A' ?": "SELECT SUM(montant_total) AS total_revenu FROM ventes v JOIN magasins m ON v.id_magasin = m.id_magasin WHERE m.nom_magasin = 'Magasin A';",
    "Combien de produits sont en stock sous le seuil d'alerte ?": "SELECT p.nom_produit, s.quantite_stock FROM produits p JOIN stocks s ON p.id_produit = s.id_produit WHERE s.quantite_stock < s.seuil_alerte;",
    "Quels clients ont effectué des achats dans le magasin 'Magasin B' ?": "SELECT c.nom_client, c.prenom FROM ventes v JOIN clients c ON v.id_client = c.id_client JOIN magasins m ON v.id_magasin = m.id_magasin WHERE m.nom_magasin = 'Magasin B';",
    "Quels sont les produits qui ont été ajoutés après le 1er janvier 2024 ?": "SELECT nom_produit, date_ajout FROM produits WHERE date_ajout > '2024-01-01';",
    "Quels magasins ont un statut 'ouvert' ?": "SELECT * FROM magasins WHERE statut_magasin = 'ouvert';",
    "Quels produits ont un prix supérieur à 100 ?": "SELECT nom_produit, prix_unitaire FROM produits WHERE prix_unitaire > 100;",
    "Quel est le total des ventes par produit pour le mois de février 2024 ?": "SELECT p.nom_produit, SUM(l.montant_total) AS total_ventes FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit JOIN ventes v ON l.id_vente = v.id_vente WHERE MONTH(v.date_vente) = 2 AND YEAR(v.date_vente) = 2024 GROUP BY p.nom_produit;",
    "Quels employés sont affectés au magasin 'Magasin C' ?": "SELECT nom_employe FROM employes e JOIN magasins m ON e.magasin_affecte = m.id_magasin WHERE m.nom_magasin = 'Magasin C';",
    "Quel est le montant moyen des ventes par employé ?": "SELECT e.nom_employe, AVG(v.montant_total) AS montant_moyen FROM ventes v JOIN employes e ON v.id_employe = e.id_employe GROUP BY e.nom_employe;",
    "Quels magasins ont plus de 50 produits en stock ?": "SELECT m.nom_magasin, COUNT(s.id_produit) AS nombre_de_produits FROM stocks s JOIN magasins m ON s.id_magasin = m.id_magasin GROUP BY m.nom_magasin HAVING nombre_de_produits > 50;",
    "Quels clients ont effectué des achats en 2024 ?": "SELECT DISTINCT c.nom_client, c.prenom FROM clients c JOIN ventes v ON c.id_client = v.id_client WHERE YEAR(v.date_vente) = 2024;",
    "Quels produits ont un stock inférieur à 10 unités ?": "SELECT p.nom_produit, s.quantite_stock FROM produits p JOIN stocks s ON p.id_produit = s.id_produit WHERE s.quantite_stock < 10;",
    "Quel est le produit le plus cher dans le magasin 'Magasin X' ?": "SELECT p.nom_produit, MAX(p.prix_unitaire) AS prix_max FROM produits p JOIN stocks s ON p.id_produit = s.id_produit JOIN magasins m ON s.id_magasin = m.id_magasin WHERE m.nom_magasin = 'Magasin X';",
    "Quels clients ont effectué un retour dans les 30 derniers jours ?": "SELECT DISTINCT c.nom_client, c.prenom FROM clients c JOIN retours r ON c.id_client = r.id_client WHERE r.date_retour >= CURDATE() - INTERVAL 30 DAY;",
    "Quel est le montant total des retours pour le mois de mars 2024 ?": "SELECT SUM(montant_rembourse) AS total_retours FROM retours WHERE MONTH(date_retour) = 3 AND YEAR(date_retour) = 2024;",
    "Quels produits ont été vendus dans les 5 derniers magasins ?": "SELECT DISTINCT p.nom_produit FROM produits p JOIN stocks s ON p.id_produit = s.id_produit JOIN magasins m ON s.id_magasin = m.id_magasin ORDER BY m.id_magasin DESC LIMIT 5;",
    "Quel est le produit ayant généré le plus de revenus en 2024 ?": "SELECT p.nom_produit, SUM(l.montant_total) AS revenu_total FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit JOIN ventes v ON l.id_vente = v.id_vente WHERE YEAR(v.date_vente) = 2024 GROUP BY p.nom_produit ORDER BY revenu_total DESC LIMIT 1;",
    "Combien de clients sont inscrits dans chaque ville ?": "SELECT ville, COUNT(*) AS nombre_clients FROM clients GROUP BY ville;",
    "Quel est le produit le plus vendu dans le magasin 'Magasin Y' ?": "SELECT p.nom_produit, SUM(l.quantite) AS total_vendu FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit JOIN ventes v ON l.id_vente = v.id_vente JOIN magasins m ON v.id_magasin = m.id_magasin WHERE m.nom_magasin = 'Magasin Y' GROUP BY p.nom_produit ORDER BY total_vendu DESC LIMIT 1;",
    "Quels employés ont des ventes supérieures à 100 000 € ?": "SELECT e.nom_employe, SUM(v.montant_total) AS total_ventes FROM ventes v JOIN employes e ON v.id_employe = e.id_employe GROUP BY e.nom_employe HAVING total_ventes > 100000;",
    "Quels clients n'ont pas effectué de vente depuis plus de 6 mois ?": "SELECT c.nom_client, c.prenom FROM clients c LEFT JOIN ventes v ON c.id_client = v.id_client WHERE v.id_vente IS NULL OR v.date_vente < CURDATE() - INTERVAL 6 MONTH;",
    "Quels produits sont dans une gamme de prix entre 50 € et 200 € ?": "SELECT nom_produit, prix_unitaire FROM produits WHERE prix_unitaire BETWEEN 50 AND 200;",
    "Quels magasins ont des produits avec un prix supérieur à 100 € en stock ?": "SELECT m.nom_magasin, p.nom_produit, p.prix_unitaire FROM magasins m JOIN stocks s ON m.id_magasin = s.id_magasin JOIN produits p ON s.id_produit = p.id_produit WHERE p.prix_unitaire > 100;",
    "Combien de produits sont disponibles par fournisseur ?": "SELECT f.nom_fournisseur, COUNT(p.id_produit) AS nombre_produits FROM produits p JOIN fournisseurs f ON p.id_fournisseur = f.id_fournisseur GROUP BY f.nom_fournisseur;",
    "Quel est le total des ventes par région en 2024 ?": "SELECT m.region, SUM(v.montant_total) AS total_ventes FROM ventes v JOIN magasins m ON v.id_magasin = m.id_magasin WHERE YEAR(v.date_vente) = 2024 GROUP BY m.region;",
    "Quels produits ont été retournés plus de 3 fois ?": "SELECT p.nom_produit, COUNT(r.id_retour) AS nombre_retours FROM retours r JOIN produits p ON r.id_produit = p.id_produit GROUP BY p.nom_produit HAVING nombre_retours > 3;",
    "Quel est le magasin ayant généré le plus de ventes en 2024 ?": "SELECT m.nom_magasin, SUM(v.montant_total) AS total_ventes FROM ventes v JOIN magasins m ON v.id_magasin = m.id_magasin WHERE YEAR(v.date_vente) = 2024 GROUP BY m.nom_magasin ORDER BY total_ventes DESC LIMIT 1;",
    "Quels clients ont un statut 'actif' et sont dans la ville 'Paris' ?": "SELECT nom_client, prenom FROM clients WHERE statut_client = 'actif' AND ville = 'Paris';",
    "Quel est le revenu total généré par les ventes en ligne (canal_vente = 'En ligne') en 2024 ?": "SELECT SUM(montant_total) AS total_ventes_en_ligne FROM ventes WHERE canal_vente = 'En ligne' AND YEAR(date_vente) = 2024;",
    "Quels produits sont les plus rentables (prix * quantité) ?": "SELECT p.nom_produit, (p.prix_unitaire * s.quantite_stock) AS rentabilite FROM produits p JOIN stocks s ON p.id_produit = s.id_produit ORDER BY rentabilite DESC LIMIT 5;",
    "Quels magasins ont des employés dont les salaires sont supérieurs à 3000 € ?": "SELECT m.nom_magasin, e.nom_employe, e.salaire FROM employes e JOIN magasins m ON e.magasin_affecte = m.id_magasin WHERE e.salaire > 3000;",
    "Quels produits sont en rupture de stock dans tous les magasins ?": "SELECT p.nom_produit FROM produits p JOIN stocks s ON p.id_produit = s.id_produit WHERE s.quantite_stock = 0;",
    "Quel est le montant moyen des ventes par magasin en 2024 ?": "SELECT m.nom_magasin, AVG(v.montant_total) AS moyenne_ventes FROM ventes v JOIN magasins m ON v.id_magasin = m.id_magasin WHERE YEAR(v.date_vente) = 2024 GROUP BY m.nom_magasin;",
    "Quel magasin a ouvert le plus récemment ?": "SELECT nom_magasin, date_ouverture FROM magasins ORDER BY date_ouverture DESC LIMIT 1;",
    "Quels produits ont une quantité en stock supérieure à 50 et un prix unitaire supérieur à 20 € ?": "SELECT p.nom_produit, s.quantite_stock, p.prix_unitaire FROM produits p JOIN stocks s ON p.id_produit = s.id_produit WHERE s.quantite_stock > 50 AND p.prix_unitaire > 20;",
    "Quels clients ont effectué des achats d'un montant total supérieur à 500 € en 2024 ?": "SELECT c.nom_client, c.prenom FROM clients c JOIN ventes v ON c.id_client = v.id_client WHERE v.montant_total > 500 AND YEAR(v.date_vente) = 2024;",
    "Quel est le produit le plus vendu en 2024 ?": "SELECT p.nom_produit, SUM(l.quantite) AS total_vendu FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit JOIN ventes v ON l.id_vente = v.id_vente WHERE YEAR(v.date_vente) = 2024 GROUP BY p.nom_produit ORDER BY total_vendu DESC LIMIT 1;",
    "Quels clients ont reçu des récompenses de fidélité supérieures à 100 € ?": "SELECT nom_client, prenom, fidelite_recompenses FROM clients WHERE fidelite_recompenses > 100;",
    "Quel est le montant total des ventes effectuées par un employé spécifique ?": "SELECT e.nom_employe, SUM(v.montant_total) AS total_ventes FROM ventes v JOIN employes e ON v.id_employe = e.id_employe WHERE e.nom_employe = 'Nom_Employe' GROUP BY e.nom_employe;",
    "Quels produits sont dans une gamme de prix entre 10 € et 50 € et sont en stock dans au moins 2 magasins ?": "SELECT p.nom_produit, p.prix_unitaire, COUNT(s.id_magasin) AS nombre_magasins FROM produits p JOIN stocks s ON p.id_produit = s.id_produit WHERE p.prix_unitaire BETWEEN 10 AND 50 GROUP BY p.nom_produit HAVING nombre_magasins >= 2;",
    "Quel est le nombre total de ventes effectuées dans la ville 'Lyon' en 2024 ?": "SELECT COUNT(*) AS total_ventes FROM ventes v JOIN magasins m ON v.id_magasin = m.id_magasin WHERE m.ville = 'Lyon' AND YEAR(v.date_vente) = 2024;",
    "Quels clients ont un statut 'inactif' et n'ont effectué aucune vente depuis plus de 1 an ?": "SELECT c.nom_client, c.prenom FROM clients c LEFT JOIN ventes v ON c.id_client = v.id_client WHERE c.statut_client = 'inactif' AND (v.id_vente IS NULL OR v.date_vente < CURDATE() - INTERVAL 1 YEAR);",
    "Quel magasin a le plus grand nombre de produits en stock ?": "SELECT m.nom_magasin, SUM(s.quantite_stock) AS total_stock FROM magasins m JOIN stocks s ON m.id_magasin = s.id_magasin GROUP BY m.nom_magasin ORDER BY total_stock DESC LIMIT 1;",
    "Quels produits ont un retour supérieur à 2 fois en 2024 ?": "SELECT p.nom_produit, COUNT(r.id_retour) AS nombre_retours FROM retours r JOIN produits p ON r.id_produit = p.id_produit JOIN ventes v ON r.id_vente = v.id_vente WHERE YEAR(v.date_vente) = 2024 GROUP BY p.nom_produit HAVING nombre_retours > 2;",
    "Quel est le revenu moyen par produit pour le mois de janvier 2024 ?": "SELECT p.nom_produit, AVG(l.montant_total) AS revenu_moyen FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit JOIN ventes v ON l.id_vente = v.id_vente WHERE MONTH(v.date_vente) = 1 AND YEAR(v.date_vente) = 2024 GROUP BY p.nom_produit;",
    "Quel est le produit le plus populaire (plus vendu) dans chaque magasin ?": "SELECT m.nom_magasin, p.nom_produit, SUM(l.quantite) AS total_vendu FROM lignes_ventes l JOIN produits p ON l.id_produit = p.id_produit JOIN ventes v ON l.id_vente = v.id_vente JOIN magasins m ON v.id_magasin = m.id_magasin GROUP BY m.nom_magasin, p.nom_produit ORDER BY total_vendu DESC;",
    "Quel est le total des retours effectués par un client donné ?": "SELECT c.nom_client, c.prenom, SUM(r.montant_rembourse) AS total_retours FROM retours r JOIN clients c ON r.id_client = c.id_client WHERE c.nom_client = 'Nom_Client' GROUP BY c.nom_client, c.prenom;",
    "Quels magasins ont des produits dont le prix unitaire est supérieur à 100 € et qui ont été ajoutés avant 2023 ?": "SELECT m.nom_magasin, p.nom_produit, p.prix_unitaire FROM magasins m JOIN stocks s ON m.id_magasin = s.id_magasin JOIN produits p ON s.id_produit = p.id_produit WHERE p.prix_unitaire > 100 AND p.date_ajout < '2023-01-01';",
    "Quels produits ont été vendus dans tous les magasins ?": "SELECT p.nom_produit FROM produits p JOIN stocks s ON p.id_produit = s.id_produit GROUP BY p.nom_produit HAVING COUNT(s.id_magasin) = (SELECT COUNT(*) FROM magasins);"
}

